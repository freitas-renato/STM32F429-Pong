/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef GAMESCREENVIEWBASE_HPP
#define GAMESCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/gamescreen_screen/GameScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class GameScreenViewBase : public touchgfx::View<GameScreenPresenter>
{
public:
    GameScreenViewBase();
    virtual ~GameScreenViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box background;
    touchgfx::Box ball;
    touchgfx::TextAreaWithOneWildcard a_position;
    touchgfx::TextAreaWithOneWildcard b_position;
    touchgfx::Line paddleA;
    touchgfx::PainterRGB565 paddleAPainter;
    touchgfx::Line paddleB;
    touchgfx::PainterRGB565 paddleBPainter;
    touchgfx::TextAreaWithOneWildcard placarA;
    touchgfx::TextAreaWithOneWildcard placarB;
    touchgfx::TextArea textPlacar;

    /*
     * Wildcard Buffers
     */
    static const uint16_t A_POSITION_SIZE = 10;
    touchgfx::Unicode::UnicodeChar a_positionBuffer[A_POSITION_SIZE];
    static const uint16_t B_POSITION_SIZE = 10;
    touchgfx::Unicode::UnicodeChar b_positionBuffer[B_POSITION_SIZE];
    static const uint16_t PLACARA_SIZE = 5;
    touchgfx::Unicode::UnicodeChar placarABuffer[PLACARA_SIZE];
    static const uint16_t PLACARB_SIZE = 5;
    touchgfx::Unicode::UnicodeChar placarBBuffer[PLACARB_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 4800;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // GAMESCREENVIEWBASE_HPP
